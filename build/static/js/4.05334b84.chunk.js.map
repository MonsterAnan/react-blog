{"version":3,"sources":["views/login/Login.module.scss","views/login/Login.jsx","redux/action/token.jsx"],"names":["module","exports","CssTextField","withStyles","root","width","color","fontSize","lineHeight","borderBottomColor","bottom","TextField","connect","props","btnRef","useRef","useState","rippleShow","animating","success","inactive","showLogin","top","left","state","setState","username","password","form","setLogin","updateField","e","target","name","value","className","style","cont","demo","login","check","onSubmit","preventDefault","row","svg","viewBox","clsx","path","name_path","d","onChange","label","pass_path","type","ref","onClick","persist","pageY","current","getBoundingClientRect","y","pageX","x","setTimeout","getToken","history","push","then","res","code","token","dispatch","SET_TOKEN","catch","err","console","log","bind","this","submit","processing","ripple"],"mappings":"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","file":"static/js/4.05334b84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"path\":\"Login_path__1haVO\",\"svg\":\"Login_svg__2agpF\",\"cont\":\"Login_cont__1D5en\",\"demo\":\"Login_demo__2eN0r\",\"login\":\"Login_login__mjLrS\",\"inactive\":\"Login_inactive__3aE-3\",\"check\":\"Login_check__3SX5g\",\"form\":\"Login_form__24bbl\",\"row\":\"Login_row__2XzKa\",\"submit\":\"Login_submit__UohuA\",\"processing\":\"Login_processing__q592q\",\"rotate\":\"Login_rotate__2B_zp\",\"success\":\"Login_success__2psYz\",\"signup\":\"Login_signup__2lEcO\",\"name_path\":\"Login_name_path__3wMMd\",\"animatePath\":\"Login_animatePath__3BjkP\",\"pass_path\":\"Login_pass_path__MPkks\",\"ripple\":\"Login_ripple__3IYli\",\"animRipple\":\"Login_animRipple__hdjX4\"};","import React, { useRef, useState } from \"react\";\r\nimport style from \"./Login.module.scss\";\r\nimport { setToken } from \"@/redux/action/token\";\r\nimport { connect } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { login } from \"@/api/login\";\r\nimport { getToken } from \"@/utils/auth\";\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    width: \"22rem\",\r\n    \"& label.MuiFormLabel-root\": {\r\n      color: \"#d2d2d2\",\r\n      fontSize: \"1.4rem\",\r\n      lineHeight: 0,\r\n    },\r\n    \"& label.Mui-focused\": {\r\n      color: \"#ff3366\",\r\n    },\r\n    \"& .MuiInputBase-input\": {\r\n      color: \"#fff\",\r\n    },\r\n    \"& .MuiInput-underline:before\": {\r\n      borderBottomColor: \"transparent\",\r\n    },\r\n    \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": {\r\n      borderBottomColor: \"rgba(255, 255, 255, 0.2)\",\r\n      bottom: \"-2px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#ff3366\",\r\n      bottom: \"-2px\",\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nfunction Login(props) {\r\n  const btnRef = useRef();\r\n  const [state, setState] = useState({\r\n    rippleShow: false,\r\n    animating: false,\r\n    success: false,\r\n    inactive: false,\r\n    showLogin: true,\r\n    top: \"0px\",\r\n    left: \"0px\",\r\n  });\r\n  const [form, setLogin] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  function loginSubmit(e) {\r\n    if (state.animating) return;\r\n    e.persist();\r\n    setState({\r\n      animating: true,\r\n      top: e.pageY - btnRef.current.getBoundingClientRect().y,\r\n      left: e.pageX - btnRef.current.getBoundingClientRect().x,\r\n      rippleShow: true,\r\n    });\r\n    setTimeout(function () {\r\n      setState({\r\n        rippleShow: false,\r\n      });\r\n      if (getToken()) {\r\n        setState({\r\n          animating: false,\r\n        });\r\n        setTimeout(() => {\r\n          setState({\r\n            inactive: true,\r\n            animating: true,\r\n            success: true,\r\n          });\r\n        }, 300);\r\n        setTimeout(() => {\r\n          props.history.push(\"/admin\");\r\n        }, 700);\r\n      } else {\r\n        login(form)\r\n          .then((res) => {\r\n            if (res.code === 1) {\r\n              setState({\r\n                animating: false,\r\n              });\r\n              setTimeout(() => {\r\n                setState({\r\n                  inactive: true,\r\n                  animating: true,\r\n                  success: true,\r\n                });\r\n              }, 300);\r\n\r\n              setTimeout(() => {\r\n                props.dispatch(setToken(getToken()));\r\n                props.history.push(\"/admin\");\r\n              }, 700);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            setState({\r\n              inactive: false,\r\n            });\r\n            console.log(err);\r\n          });\r\n      }\r\n    }, 800);\r\n  }\r\n  const printValues = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const updateField = (e) => {\r\n    setLogin({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  return (\r\n    <div className={style.cont}>\r\n      <div className={style.demo}>\r\n        <div className={style.login}>\r\n          <div className={style.check} />\r\n          <form onSubmit={printValues} className={style.form}>\r\n            <div className={style.row}>\r\n              <svg className={`${style.svg}`} viewBox=\"0 0 20 20\">\r\n                <path\r\n                  className={clsx(style.path, style.name_path)}\r\n                  d=\"M0,20 a10,8 0 0,1 20,0z M10,0 a4,4 0 0,1 0,8 a4,4 0 0,1 0,-8\"\r\n                />\r\n              </svg>\r\n\r\n              <CssTextField\r\n                name=\"username\"\r\n                color=\"secondary\"\r\n                value={form.username}\r\n                onChange={updateField}\r\n                label=\"Username\"\r\n              />\r\n            </div>\r\n            <div className={style.row}>\r\n              <svg className={`${style.svg}`} viewBox=\"0 0 20 20\">\r\n                <path\r\n                  className={clsx(style.path, style.pass_path)}\r\n                  d=\"M0,20 20,20 20,8 0,8z M10,13 10,16z M4,8 a6,8 0 0,1 12,0\"\r\n                />\r\n              </svg>\r\n              <CssTextField\r\n                name=\"password\"\r\n                color=\"secondary\"\r\n                type=\"password\"\r\n                value={form.password}\r\n                onChange={updateField}\r\n                label=\"Password\"\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              ref={btnRef}\r\n              onClick={loginSubmit.bind(this)}\r\n              className={clsx(\r\n                style.submit,\r\n                state.animating && style.processing,\r\n                state.success && style.success,\r\n                state.inactive && style.inactive\r\n              )}\r\n            >\r\n              Sign in\r\n              {state.rippleShow && (\r\n                <div\r\n                  className={style.ripple}\r\n                  style={{ top: state.top, left: state.left }}\r\n                ></div>\r\n              )}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect()(Login);\r\n","\r\nimport {SET_TOKEN} from '../actionTypes'\r\n\r\nexport function setToken(token){\r\n    return {\r\n      type:SET_TOKEN,\r\n      token\r\n    }\r\n  }\r\n"],"sourceRoot":""}