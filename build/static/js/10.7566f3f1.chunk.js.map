{"version":3,"sources":["api/article.js","components/MarkDown/index.jsx","views/ArticleManage/index.jsx"],"names":["api","getArticleList","params","GET","addArticleList","POST","updateArticleList","PUT","marked","setOptions","renderer","Renderer","highlight","code","highlightJs","highlightAuto","value","pedantic","gfm","tables","breaks","sanitize","smartLists","smartypants","xhtml","MarkDown","memo","props","renderHtml","useMemo","markdown","Grid","container","spacing","TextField","multiline","label","placeholder","fullWidth","rows","name","onChange","margin","InputLabelProps","shrink","className","dangerouslySetInnerHTML","__html","useStyles","makeStyles","theme","title","textAlign","form","minWidth","maxWidth","width","formControl","selectEmpty","marginTop","publish","visible","color","names","ArticleManage","classes","useState","currentData","type","html","github","desc","level","isVisible","releaseTime","Date","source","articleData","setArticleData","handleChange","e","persist","target","checked","onSubmit","preventDefault","FormControl","required","InputLabel","Select","displayEmpty","multiple","input","Input","renderValue","selected","length","join","inputProps","MenuItem","disabled","map","key","DateTimePicker","variant","format","Switch","Button","button","endIcon","onClick","then","res","setNotification","closeDrawer"],"mappings":"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","file":"static/js/10.7566f3f1.chunk.js","sourcesContent":["import { GET, POST,PUT,DEL } from \"../utils/http\"\r\n\r\nconst api = {\r\n    article: '/api/admin/article'\r\n}\r\n\r\n\r\n/**\r\n * Get Article List\r\n * @param {keywod,pageindex,pagesize} params \r\n */\r\nexport  function getArticleList (params) {\r\n\r\n    return GET(api.article,params);\r\n}\r\n\r\n/**\r\n * Add Article for ArticleList\r\n * @param {paramsData} params \r\n */\r\nexport  function addArticleList (params) {\r\n\r\n    return POST(api.article, params);\r\n}\r\n\r\n/**\r\n * Edit Article for ArticleList\r\n * @param {paramsData} params \r\n */\r\nexport  function updateArticleList (params) {\r\n    \r\n    return PUT(api.article, params);\r\n}\r\n\r\n/**\r\n * Delete Article for ArticleList\r\n * @param {paramsData} params \r\n */\r\nexport  function delArticleList (params) {\r\n    \r\n    return DEL(api.article, params);\r\n}","import React, { memo, useMemo } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport marked from \"marked\";\r\nimport highlightJs from \"highlight.js\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport  './hignlightJs.css'\r\nimport \"./markdown.css\";\r\n\r\nmarked.setOptions({\r\n  renderer: new marked.Renderer(),\r\n  highlight: function (code) {\r\n    return highlightJs.highlightAuto(code).value;\r\n  },\r\n  pedantic: false,\r\n  gfm: true,\r\n  tables: true,\r\n  breaks: false,\r\n  sanitize: false,\r\n  smartLists: true,\r\n  smartypants: false,\r\n  xhtml: false,\r\n});\r\nconst MarkDown = memo((props) => {\r\n  let renderHtml = useMemo(() => {\r\n    if(props.markdown){\r\n      return marked(props.markdown)\r\n    }\r\n  }, [props.markdown]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1}>\r\n          <TextField\r\n            multiline\r\n            label=\"文章内容\"\r\n            placeholder=\"输入文章内容\"\r\n            fullWidth\r\n            rows={22}\r\n            name=\"markdown\"\r\n            onChange={props.onChange}\r\n            value={props.markdown}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <div\r\n            className='markdown-body'\r\n            dangerouslySetInnerHTML={{ __html: renderHtml }}\r\n          ></div>\r\n      </Grid>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default MarkDown;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MarkDown from \"components/MarkDown\";\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport setNotification from 'utils/setNotification'\r\n// api\r\nimport { addArticleList, updateArticleList } from \"api/article\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    textAlign: \"center\",\r\n    margin: \"20px 0\",\r\n  },\r\n  form: {\r\n    minWidth: 200,\r\n    maxWidth: 800,\r\n    width: \"100%\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(2, 0),\r\n    width: \"100%\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  publish: {\r\n    marginTop: 10,\r\n    textAlign: \"right\",\r\n  },\r\n  visible: {\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n}));\r\n\r\nconst names = [\r\n  \"HTML\",\r\n  \"CSS\",\r\n  \"javascript\",\r\n  \"Vue.js\",\r\n  \"React.js\",\r\n  \"Webpack\",\r\n  \"Babel\",\r\n  \"Nginx\",\r\n  \"Docker\",\r\n  \"Travis CI\",\r\n];\r\n\r\nexport default function ArticleManage(props) {\r\n  const classes = useStyles();\r\n  const [articleData, setArticleData] = useState(\r\n    props.currentData?{...props.currentData}:{\r\n    type: [],\r\n    html: \"\",\r\n    title: \"\",\r\n    markdown: \"\",\r\n    github: \"\",\r\n    desc: \"\",\r\n    level: \"\",\r\n    isVisible: true,\r\n    releaseTime: new Date(),\r\n    source: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    e.persist();\r\n\r\n    setArticleData({\r\n      ...articleData,\r\n      [e.target.name]: e.target.value ? e.target.value : e.target.checked,\r\n    });\r\n  };\r\n\r\n  const publishArtocle = () => {\r\n    if(props.currentData){\r\n      updateArticleList(articleData).then(res=>{\r\n        if(res && res.code === 1){\r\n          setNotification('修改成功!')\r\n          props.closeDrawer()\r\n        }\r\n      })\r\n    }else{\r\n      addArticleList(articleData).then(res=>{\r\n        if(res && res.code === 1){\r\n          setNotification('添加成功!')\r\n        }\r\n        \r\n      });\r\n    }\r\n    \r\n  };\r\n  return (\r\n    <form className={classes.form} onSubmit={(e) => e.preventDefault()}>\r\n      <h3 className={classes.title}>添加文章</h3>\r\n      <FormControl required className={classes.formControl}>\r\n        <InputLabel shrink>文章类型</InputLabel>\r\n        <Select\r\n          displayEmpty\r\n          multiple\r\n          name=\"type\"\r\n          value={articleData.type}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          renderValue={(selected) => {\r\n            if (selected.length === 0) {\r\n              return <em>选择文章类型</em>;\r\n            }\r\n\r\n            return selected.join(\", \");\r\n          }}\r\n          className={classes.selectEmpty}\r\n          inputProps={{ \"aria-label\": \"Without label\" }}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>选择文章类型</em>\r\n          </MenuItem>\r\n          {names.map((name) => (\r\n            <MenuItem key={name} value={name}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <div className={classes.formControl}>\r\n        <TextField\r\n          required\r\n          label=\"标题\"\r\n          placeholder=\"请输入标题\"\r\n          fullWidth\r\n          name=\"title\"\r\n          value={articleData.title}\r\n          margin=\"normal\"\r\n          onChange={handleChange}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={classes.formControl}>\r\n        <TextField\r\n          multiline\r\n          label=\"描述\"\r\n          placeholder=\"请输入描述\"\r\n          fullWidth\r\n          name=\"desc\"\r\n          rows={2}\r\n          value={articleData.desc}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={classes.formControl}>\r\n        <MarkDown onChange={handleChange} markdown={articleData.markdown} />\r\n      </div>\r\n      <div className={classes.formControl}>\r\n        <TextField\r\n          required\r\n          label=\"级别\"\r\n          placeholder=\"请输入级别\"\r\n          fullWidth\r\n          name=\"level\"\r\n          value={articleData.level}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={classes.formControl}>\r\n        <TextField\r\n          required\r\n          label=\"来源\"\r\n          placeholder=\"请输入来源\"\r\n          fullWidth\r\n          name=\"source\"\r\n          value={articleData.source}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={classes.formControl}>\r\n        <TextField\r\n          required\r\n          label=\"Github\"\r\n          placeholder=\"请输入Github\"\r\n          fullWidth\r\n          name=\"github\"\r\n          value={articleData.github}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={classes.formControl}>\r\n        <DateTimePicker\r\n          required\r\n          variant=\"inline\"\r\n          label=\"发布时间\"\r\n          value={articleData.releaseTime}\r\n          format=\"yyyy/MM/dd HH:mm\"\r\n          onChange={(e) =>\r\n            setArticleData({\r\n              ...articleData,\r\n              releaseTime: e,\r\n            })\r\n          }\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={(classes.formControl, classes.visible)}>\r\n        是否可见*\r\n        <Switch\r\n          color=\"primary\"\r\n          checked={articleData.isVisible}\r\n          name=\"isVisible\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className={classes.publish}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          endIcon={<SendIcon />}\r\n          onClick={publishArtocle}\r\n        >\r\n          立即发布\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n"],"sourceRoot":""}